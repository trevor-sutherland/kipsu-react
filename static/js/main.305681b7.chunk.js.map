{"version":3,"sources":["logo.png","Selectors/MessageSelect.js","Selectors/CompanySelect.js","Selectors/GuestSelect.js","Messages/WelcomeMessage.js","Messages/CleanedMessage.js","Messages/ServiceMessage.js","Messages/ReadyMessage.js","Messages/DefaultMessage.js","Messages/CustomMessage.js","Messages/MessageCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MessageSelect","this","props","messages","map","item","key","id","value","title","Fragment","renderItems","Component","CompanySelect","companyData","company","GuestSelect","guestData","WelcomeMessage","state","guestSelected","selectGuest","firstName","selectValue","getGreeting","undefined","Card","Body","Title","beginning","closing","CleanedMessage","roomNumber","time","reservation","ServiceMessage","ReadyMessage","DefaultMessage","style","color","CustomMessage","customizeMessage","defaultMessage","customMessage","customizeTitle","messageTitle","handleChange","bind","handleTitle","changeTitle","handleMessage","handleClear","handleFirstName","handleRoomNumber","handleCompanyName","handleCity","e","setState","target","name","preventDefault","city","companySelected","message","Form","className","Label","htmlFor","as","placeholder","custimizeTitle","onChange","onClick","Control","rows","MessageCard","App","handleGuestState","selectedGuestID","parseInt","find","handleCompanyState","selectedCompany","hour","minutes","greeting","getHour","i","date","Date","addZero","getHours","getMinutes","index","options","l","length","selected","indexOf","splice","axios","get","then","response","data","catch","error","console","log","src","logo","alt","onSubmit","handleSubmit","default","messageType","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,uQCuB5BC,E,sLAhBX,OAAOC,KAAKC,MAAMC,SAASC,KAAI,SAACC,GAAD,OAC9B,4BAAQC,IAAKD,EAAKE,GAAIC,MAAOH,EAAKI,OACjCJ,EAAKI,Y,+BAML,OACA,kBAAC,IAAMC,SAAP,KACCT,KAAKU,mB,GAbgBC,aCmBbC,E,sLAhBX,OAAOZ,KAAKC,MAAMY,YAAYV,KAAI,SAACC,GAAD,OAChC,4BAAQC,IAAKD,EAAKE,GAAIC,MAAOH,EAAKU,SACjCV,EAAKU,c,+BAMN,OACA,kBAAC,IAAML,SAAP,KACCT,KAAKU,mB,GAbgBC,aCmBbI,E,sLAhBX,OAAOf,KAAKC,MAAMe,UAAUb,KAAI,SAACC,GAAD,OAC9B,4BAAQC,IAAKD,EAAKE,GAAIC,MAAOH,EAAKE,IACjCF,EAAKE,S,+BAMN,OACA,kBAAC,IAAMG,SAAP,KACCT,KAAKU,mB,GAbcC,a,QC6BXM,E,YA7Bb,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACZC,cAAc,GACZC,YAAa,IAJC,E,sEAQZ,IAKHC,EALG,EAIsDrB,KAAKC,MAA1DC,EAJD,EAICA,SAAUoB,EAJX,EAIWA,YAAaH,EAJxB,EAIwBA,cAAeI,EAJvC,EAIuCA,YAO9C,OAJCF,OADqBG,IAAlBL,QAA2DK,IAA5BL,EAAcE,UACpCC,EAAY,GAEZH,EAAcE,UAG1B,kBAACI,EAAA,EAAKC,KAAN,KACG,kBAACD,EAAA,EAAKE,MAAN,KACC3B,KAAKC,MAAMqB,YAAY,IAEvBC,IAAeF,EAAWnB,EAAS,GAAG0B,UAAWN,EAAY,GAAIpB,EAAS,GAAG2B,a,GAzBvDlB,aCgCdmB,E,YA/Bb,WAAY7B,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,sEAMZ,IAKHG,EACAU,EANG,EAI6D/B,KAAKC,MAAjEC,EAJD,EAICA,SAAUoB,EAJX,EAIWA,YAAaH,EAJxB,EAIwBA,cAAea,EAJvC,EAIuCA,KAAMT,EAJ7C,EAI6CA,YAWpD,YARsBC,IAAlBL,QAA2DK,IAA5BL,EAAcE,WAChDA,EAAYC,EAAY,GACxBS,EAAaT,IAGbD,EAAYF,EAAcE,UAC1BU,EAAaZ,EAAcc,YAAYF,YAGvC,kBAACN,EAAA,EAAKC,KAAN,KACG,kBAACD,EAAA,EAAKE,MAAN,KACCL,EAAY,IAEZC,IAAeF,EAJnB,gBAI2CU,EAAY7B,EAAS,GAAG0B,UAJnE,IAI+EI,EAJ/E,KAIuF9B,EAAS,GAAG2B,a,GA3BzElB,aCgCduB,E,YA7Bb,WAAYjC,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACZC,cAAc,GACZC,YAAa,IAJC,E,sEAQZ,IAKHC,EALG,EAIuDrB,KAAKC,MAA3DC,EAJD,EAICA,SAAUoB,EAJX,EAIWA,YAAaH,EAJxB,EAIwBA,cAAeI,EAJvC,EAIuCA,YAO9C,OAJCF,OADqBG,IAAlBL,QAA2DK,IAA5BL,EAAcE,UACpCC,EAAY,GAEZH,EAAcE,UAG1B,kBAACI,EAAA,EAAKC,KAAN,KACG,kBAACD,EAAA,EAAKE,MAAN,KACCL,EAAY,IAEZC,IAAeF,EAAWnB,EAAS,GAAG0B,UAAWN,EAAY,GAAIpB,EAAS,GAAG2B,a,GAzBvDlB,aCiCdwB,E,YAhCb,WAAYlC,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,sEAMZ,IAKHG,EACAU,EANG,EAIuD/B,KAAKC,MAA3DC,EAJD,EAICA,SAAUoB,EAJX,EAIWA,YAAaH,EAJxB,EAIwBA,cAAeI,EAJvC,EAIuCA,YAW9C,YARsBC,IAAlBL,QAA2DK,IAA5BL,EAAcE,WAChDA,EAAYC,EACZS,EAAaT,IAGbD,EAAYF,EAAcE,UAC1BU,EAAaZ,EAAcc,YAAYF,YAIvC,kBAACN,EAAA,EAAKC,KAAN,KACG,kBAACD,EAAA,EAAKE,MAAN,KACCL,EAAY,IAEZC,IAAeF,EAAWnB,EAAS,GAAG0B,UAA2B,sBAAhBN,EAAsC,oBAAsBS,EAJjH,IAI8HT,EAAY,GAAIpB,EAAS,GAAG2B,a,GA5BlIlB,aC4BZyB,E,YA3Bb,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,sEAMZ,IAKHG,EALG,EAIgCrB,KAAKC,MAApCqB,EAJD,EAICA,YAAaH,EAJd,EAIcA,cAOrB,OAJCE,OADqBG,IAAlBL,QAA2DK,IAA5BL,EAAcE,UACpCC,EAAY,GAEZH,EAAcE,UAG1B,kBAACI,EAAA,EAAKC,KAAN,KACG,kBAACD,EAAA,EAAKE,MAAN,CAAYU,MAAO,CAAEC,MAAO,cAC3BhB,EAAY,IAEZD,EAJJ,MAIkBC,EAAY,GAJ9B,MAIqCA,EAAY,Q,GAvBvBX,a,gBC0Jd4B,E,YAzJb,WAAYtC,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACXC,cAAc,GACdC,YAAa,GACboB,iBAAkB,GAClBC,eAAgB,4DAChBC,cAAe,GACfC,eAAgB,GAChBC,aAAc,eACd9B,QAAS,IAGT,EAAK+B,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBACvB,EAAKM,iBAAmB,EAAKA,iBAAiBN,KAAtB,gBACxB,EAAKO,kBAAoB,EAAKA,kBAAkBP,KAAvB,gBACzB,EAAKQ,WAAa,EAAKA,WAAWR,KAAhB,gBArBH,E,0EAyBJS,GACXvD,KAAKwD,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOlD,U,kCAKlBgD,GACVvD,KAAKwD,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOlD,U,kCAKlBgD,GACVA,EAAEI,iBACF3D,KAAKwD,SAAS,CACdZ,aAAc,CAAC5C,KAAKkB,MAAMyB,kBAE1B3C,KAAKwD,SAAS,CAACb,eAAgB,O,oCAInBY,GACZA,EAAEI,iBACF3D,KAAKwD,SAAS,CACdd,cAAc,GAAD,mBAAM1C,KAAKkB,MAAMwB,eAAjB,CAAgC1C,KAAKkB,MAAMsB,iBAAkB,QAE1ExC,KAAKwD,SAAS,CAAChB,iBAAkB,O,oCAKjCxC,KAAKwD,SAAS,CAACd,cAAe,O,wCAId,IAEdrB,EAFa,EACsBrB,KAAKC,MAApCqB,EADS,EACTA,YAAaH,EADJ,EACIA,cAGnBE,OADoBG,IAAlBL,QAA2DK,IAA5BL,EAAcE,UACnCC,EAAY,GAEZH,EAAcE,UAE1BrB,KAAKwD,SAAS,CAACd,cAAc,GAAD,mBAAM1C,KAAKkB,MAAMwB,eAAjB,CAAgCrB,EAAW,U,yCAItD,IAEbU,EAFY,EACuB/B,KAAKC,MAApCqB,EADQ,EACRA,YAAaH,EADL,EACKA,cAGnBY,OADoBP,IAAlBL,QAA2DK,IAA5BL,EAAcE,UAClCC,EAAY,GAEZH,EAAcc,YAAYF,WAEvC/B,KAAKwD,SAAS,CAACd,cAAc,GAAD,mBAAM1C,KAAKkB,MAAMwB,eAAjB,CAAgCX,EAAY,U,0CAK1E/B,KAAKwD,SAAS,CAAEd,cAAc,GAAD,mBAAM1C,KAAKkB,MAAMwB,eAAjB,CAAgC1C,KAAKC,MAAMqB,YAAY,GAAI,U,mCAI7E,IAGPsC,EAHM,EAE+B5D,KAAKC,MAAtCqB,EAFE,EAEFA,YAAauC,EAFX,EAEWA,gBAGnBD,OADsBpC,IAApBqC,QAA6DrC,IAA5BqC,EAAgB/C,QAC5CQ,EAAY,GAEZuC,EAAgBD,KAEzB5D,KAAKwD,SAAS,CAACd,cAAc,GAAD,mBAAM1C,KAAKkB,MAAMwB,eAAjB,CAAgCkB,EAAM,U,+BAOpE,IAAIE,EAMJ,OAJEA,OADkCtC,IAAhCxB,KAAKkB,MAAMwB,cAAc,GACjB1C,KAAKkB,MAAMuB,eAEXzC,KAAKkB,MAAMwB,cAGlB,6BACC,kBAACqB,EAAA,EAAD,CAAMC,UAAU,iBAChB,kBAACD,EAAA,EAAKE,MAAN,CACED,UAAU,aACVE,QAAQ,gBACV,2BACEC,GAAG,WACHC,YAAY,wBACZ9D,GAAG,iBACHoD,KAAK,iBACLnD,MAAOP,KAAKkB,MAAMmD,eAClBC,SAAUtE,KAAKgD,cAEjB,4BAAQzC,MAAM,WAAWgE,QAASvE,KAAK+C,aAAvC,gBACA,4BAAK/C,KAAKkB,MAAM0B,eAEhB,2BAAIkB,GACJ,kBAACC,EAAA,EAAKS,QAAN,CACEL,GAAG,WACHM,KAAK,IACLL,YAAY,oCACZ9D,GAAG,mBACHoD,KAAK,mBACLnD,MAAOP,KAAKkB,MAAMsB,iBAClB8B,SAAUtE,KAAK6C,gBAGjB,4BAAQtC,MAAM,cAAcgE,QAASvE,KAAKiD,eAA1C,eACA,4BAAQ1C,MAAM,aAAagE,QAASvE,KAAKmD,iBAAzC,cACA,4BAAQ5C,MAAM,eAAegE,QAASvE,KAAKqD,mBAA3C,gBACA,4BAAQ9C,MAAM,OAAOgE,QAASvE,KAAKsD,YAAnC,QACA,4BAAQ/C,MAAM,cAAcgE,QAASvE,KAAKoD,kBAA1C,eACA,4BAAQ7C,MAAM,QAAQyD,UAAU,cAAaO,QAASvE,KAAKkD,aAA3D,c,GAnJkBvC,aCyDb+D,E,YApDb,WAAYzE,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,sEAMV,MAGyFlB,KAAKC,MAA7FqB,EAHD,EAGCA,YAAapB,EAHd,EAGcA,SAAUqB,EAHxB,EAGwBA,YAAasC,EAHrC,EAGqCA,gBAAiB1C,EAHtD,EAGsDA,cAAeH,EAHrE,EAGqEA,UAAWgB,EAHhF,EAGgFA,KAEvF,OAAK9B,EAAS,IACTc,EAEDM,EAAY,KAAOpB,EAAS,GAAGM,MAE/B,kBAACiB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAgBF,YAAaA,EAAasC,gBAAiBA,EAAiB1C,cAAeA,EAAeH,UAAWA,EAAWM,YAAaA,EAAapB,SAAUA,KAG/JoB,EAAY,KAAOpB,EAAS,GAAGM,MAEpC,kBAACiB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAgBF,YAAaA,EAAaJ,cAAeA,EAAeH,UAAWA,EAAWM,YAAaA,EAAaU,KAAMA,EAAM9B,SAAUA,KAG3IoB,EAAY,KAAOpB,EAAS,GAAGM,MAEpC,kBAACiB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAgBF,YAAaA,EAAasC,gBAAiBA,EAAiB1C,cAAeA,EAAeH,UAAWA,EAAWM,YAAaA,EAAapB,SAAUA,KAGjKoB,EAAY,KAAOpB,EAAS,GAAGM,MAEpC,kBAACiB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAcF,YAAaA,EAAaJ,cAAeA,EAAeH,UAAWA,EAAWM,YAAaA,EAAapB,SAAUA,KAG7HoB,EAAY,KAAOpB,EAAS,GAAGM,MAEpC,kBAAC,EAAD,CAAeqD,gBAAiBA,EAAiB1C,cAAeA,EAAeH,UAAWA,EAAWM,YAAaA,IAIlH,kBAACG,EAAA,EAAD,KACA,kBAAC,EAAD,CAAgBoC,gBAAiBA,EAAiB1C,cAAeA,EAAeH,UAAWA,EAAWM,YAAaA,KAlChG,S,GAZHX,aC2LXgE,E,YAzLb,WAAY1E,GAAQ,IAAD,8BACjB,4CAAMA,KA0ER2E,iBAAmB,WACjB,IAAK,EAAK1D,MAAMF,UAAW,OAAO,KAClC,IAAM6D,EAAkBC,SAAU,EAAK5D,MAAMI,YAAY,IACnDH,EAAgB,EAAKD,MAAMF,UAAU+D,MAAK,SAAA3E,GAAI,OAAGA,EAAKE,KAAOuE,KACnE,EAAKrB,SAAS,CACZrC,cAAeA,KAhFA,EAqFnB6D,mBAAqB,WACnB,IAAMC,EAAmB,EAAK/D,MAAMI,YAAY,GAC1CuC,EAAkB,EAAK3C,MAAML,YAAYkE,MAAK,SAAA3E,GAAI,OAAGA,EAAKU,UAAYmE,KAC5E,EAAKzB,SAAS,CACZK,gBAAiBA,KAvFf,EAAK3C,MAAQ,CACXhB,SAAU,GACVW,YAAa,GACbG,UAAW,GACXgB,KAAM,KACNkD,KAAM,KACNC,QAAS,KACTC,SAAS,GACT9D,YAAa,CAAC,mBAAoB,oBAAqB,yBACvDH,cAAe,GACf0C,gBAAiB,IAGvB,EAAKhB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKuC,QAAU,EAAKA,QAAQvC,KAAb,gBACf,EAAKvB,YAAc,EAAKA,YAAYuB,KAAjB,gBAjBF,E,qEAsBXwC,GAIN,OAHIA,EAAI,KACNA,EAAI,IAAMA,GAELA,I,gCAUP,IAAMC,EAAO,IAAIC,KACXN,EAAOlF,KAAKyF,QAAQF,EAAKG,YACzBP,EAAUnF,KAAKyF,QAAQF,EAAKI,cAC5B3D,EAAOkD,EAAO,IAAMC,EAE1BnF,KAAKwD,SAAS,CAACxB,SACfhC,KAAKwD,SAAS,CAAC2B,YACfnF,KAAKwD,SAAS,CAAC0B,W,oCAef,OAPIlF,KAAKkB,MAAMgE,MAAO,IAAMlF,KAAKkB,MAAMgE,MAAQ,GAClC,mBACFlF,KAAKkB,MAAMgE,MAAO,GAChB,iBAEA,mB,mCAMD3B,EAAGqC,GAGb,IAFF,IAAMC,EAAUtC,EAAEE,OAAOoC,QACnBvE,EAAW,YAAOtB,KAAKkB,MAAMI,aACxBgE,EAAI,EAAGQ,EAAID,EAAQE,OAAQT,EAAIQ,EAAGR,IACrCO,EAAQP,GAAGU,WAAuD,IAA3C1E,EAAY2E,QAAQJ,EAAQP,GAAG/E,QACxDe,EAAY4E,OAAON,EAAO,EAAGC,EAAQP,GAAG/E,OAG9CP,KAAKwD,SAAS,CAAClC,eAActB,KAAK4E,kBAClC5E,KAAKwD,SAAS,CAAClC,eAActB,KAAKgF,sB,0CAuBf,IAAD,OAGdmB,IAAMC,IAAI,iBACTC,MAAK,SAACC,GACF,EAAK9C,SAAS,CACbtD,SAAUoG,EAASC,UAIxBC,OAAM,SAACC,GAAD,OAAUC,QAAQC,IAAIF,MAI7BN,IAAMC,IAAI,gBACTC,MAAK,SAACC,GACF,EAAK9C,SAAS,CACbxC,UAAWsF,EAASC,UAIzBC,OAAM,SAACC,GAAD,OAAUC,QAAQC,IAAIF,MAI7BN,IAAMC,IAAI,mBACTC,MAAK,SAACC,GACF,EAAK9C,SAAS,CACb3C,YAAayF,EAASC,UAI3BC,OAAM,SAACC,GAAD,OAAUC,QAAQC,IAAIF,MAKjCzG,KAAKqF,UACLrF,KAAKuB,gB,+BAII,IAAD,OAGR,OACE,yBAAKyC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAK4C,IAAKC,IAAM7C,UAAU,WAAW8C,IAAI,UAG3C,yBAAK9C,UAAU,YAAY1D,GAAG,eAC5B,wBAAI0D,UAAU,SAAd,+BAEA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,cACf,0BAAM+C,SAAU/G,KAAKgH,cACrB,2BAAQhD,UAAU,cAAlB,uBACI,4BAAQA,UAAU,eAAe1D,GAAG,aAAagE,SAAU,SAACf,GAAD,OAAO,EAAKV,aAAaU,EAAG,KACrF,4BAAQ0D,SAAO,GAAf,uBACA,kBAAC,EAAD,CAAe/G,SAAUF,KAAKkB,MAAMhB,cAI1C,yBAAK8D,UAAU,cACf,2BAAOA,UAAU,cAAjB,kBACE,4BAAQA,UAAU,eAAgB1D,GAAG,aAAagE,SAAU,SAACf,GAAD,OAAO,EAAKV,aAAaU,EAAG,KACtF,4BAAQ0D,SAAO,GAAf,oBACA,kBAAC,EAAD,CAAepG,YAAab,KAAKkB,MAAML,gBAG3C,yBAAKmD,UAAU,cACf,2BAAOA,UAAU,cAAjB,mBACI,4BAAQA,UAAU,eAAgB1D,GAAG,aAAagE,SAAU,SAACf,GAAD,OAAO,EAAKV,aAAaU,EAAG,KACtF,4BAAQ0D,SAAO,GAAf,qBACA,kBAAC,EAAD,CAAajG,UAAWhB,KAAKkB,MAAMF,eAIrC,yBAAKgD,UAAU,QAAQ1D,GAAG,WAC1B,2BAAO0D,UAAU,cAAjB,8BACA,kBAAC,EAAD,CAAazC,YAAavB,KAAKuB,YAAaS,KAAMhC,KAAKkB,MAAMc,KAAM6B,gBAAiB7D,KAAKkB,MAAM2C,gBAAiB1C,cAAenB,KAAKkB,MAAMC,cAAeH,UAAWhB,KAAKkB,MAAMF,UAAWM,YAAatB,KAAKkB,MAAMI,YAAapB,SAAUF,KAAKkB,MAAMhB,SAAUgH,YAAalH,KAAKkB,MAAMgG,YAAa3G,MAAOP,KAAKkB,MAAMX,MAAOyD,UAAU,kB,GAjLpUrD,aCEEwG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACDC,SAASC,eAAe,SD2HnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzB,MAAK,SAAA0B,GACJA,EAAaC,gBAEdxB,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM3C,c","file":"static/js/main.305681b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e05d227e.png\";","import React, { Component } from 'react';\r\n\r\n//Renders message select dropdown\r\n\r\nclass MessageSelect extends Component {\r\n \r\n  renderItems() {\r\n    return this.props.messages.map((item) => (\r\n    \t<option key={item.id} value={item.title}>\r\n    \t{item.title}\r\n    \t</option>\r\n      )); \r\n    }\r\n\r\n  render() {\r\n      return (\r\n      <React.Fragment>\r\n      {this.renderItems()}\r\n      </React.Fragment>\r\n      );\r\n  } \r\n}\r\n\r\nexport default MessageSelect;\r\n","import React, { Component } from 'react';\r\n\r\n//Renders company select dropdown\r\n\r\nclass CompanySelect extends Component {\r\n\r\n  renderItems() {\r\n    return this.props.companyData.map((item) => (\r\n      <option key={item.id} value={item.company}>\r\n      {item.company}\r\n      </option>  \r\n      ));\r\n    }\r\n\r\n  render() {\r\n      return (\r\n      <React.Fragment>\r\n      {this.renderItems()}\r\n      </React.Fragment>\r\n      );\r\n  }\r\n}\r\n\r\nexport default CompanySelect;\r\n","import React, { Component } from 'react';\r\n\r\n//Renders guest select dropdown\r\n\r\nclass GuestSelect extends Component {\r\n\r\n  renderItems() {\r\n    return this.props.guestData.map((item) => (\r\n      <option key={item.id} value={item.id}>\r\n      {item.id}\r\n      </option> \r\n      ));\r\n    }\r\n\r\n  render() {\r\n      return (\r\n      <React.Fragment>\r\n      {this.renderItems()}\r\n      </React.Fragment>\r\n      ); \r\n  }\r\n}\r\n\r\nexport default GuestSelect;\r\n","import React, { Component } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nclass WelcomeMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tguestSelected:[],\r\n      \tselectGuest: []\r\n    };\r\n    }\r\n    \r\n\trender(){\r\n\t\t\r\n\t\t//Logic for which object to use based on if user chose from dropdown\t\t\r\n\t\t\r\n\t\tconst { messages, selectValue, guestSelected, getGreeting} = this.props\r\n\t\tlet firstName;\r\n\t\tif (guestSelected === undefined || guestSelected.firstName === undefined){\r\n\t\t\tfirstName = selectValue[1];\r\n\t\t} else {\r\n\t\t\tfirstName = guestSelected.firstName;\r\n\t\t}\t\r\n\t\treturn(\r\n\t\t\t<Card.Body>\r\n\t\t    <Card.Title>\r\n\t\t    {this.props.selectValue[2]}\r\n\t\t    </Card.Title>\r\n\t\t    {getGreeting()}{firstName}{messages[0].beginning}{selectValue[0]}{messages[0].closing}\r\n\t\t    </Card.Body>\r\n\t\t);\r\n}\r\n}\r\nexport default WelcomeMessage;","import React, { Component } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nclass CleanedMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    }\r\n    \r\n\trender(){\r\n\r\n\t\t//Logic for which object to use based on if user chose from dropdown\r\n\r\n\t\tconst { messages, selectValue, guestSelected, time, getGreeting } = this.props\r\n\t\tlet firstName;\r\n\t\tlet roomNumber;\r\n\t\tif (guestSelected === undefined || guestSelected.firstName === undefined){\r\n\t\t\tfirstName = selectValue[1];\r\n\t\t\troomNumber = selectValue;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tfirstName = guestSelected.firstName;\r\n\t\t\troomNumber = guestSelected.reservation.roomNumber;\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<Card.Body>\r\n\t\t    <Card.Title>\r\n\t\t    {selectValue[2]}\r\n\t\t    </Card.Title>\r\n\t\t    {getGreeting()}{firstName}, your room #{roomNumber}{messages[1].beginning} {time}. {messages[1].closing}\r\n\t\t    </Card.Body>\r\n\t\t);\r\n}\r\n}\r\nexport default CleanedMessage;","import React, { Component } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n//Renders service message card\r\n\r\nclass ServiceMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tguestSelected:[],\r\n      \tselectGuest: []\r\n    };\r\n    }\r\n\r\n\trender(){\r\n\t\t\r\n\t\t//Logic for which object to use based on if user chose from dropdown\r\n\r\n\t\tconst { messages, selectValue, guestSelected, getGreeting } = this.props\r\n\t\tlet firstName;\r\n\t\tif (guestSelected === undefined || guestSelected.firstName === undefined){\r\n\t\t\tfirstName = selectValue[1];\r\n\t\t} else {\r\n\t\t\tfirstName = guestSelected.firstName;\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<Card.Body>\r\n\t\t    <Card.Title>\r\n\t\t    {selectValue[2]}\r\n\t\t    </Card.Title>\r\n\t\t    {getGreeting()}{firstName}{messages[2].beginning}{selectValue[0]}{messages[2].closing}\r\n\t\t    </Card.Body>\r\n\t\t);\r\n}\r\n}\r\nexport default ServiceMessage;","import React, { Component } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n//Renders ready message card\r\n\r\nclass ReadyMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    }\r\n\r\n\trender(){\r\n\t\t\r\n\t\t//Logic for which object to use based on if user chose from dropdown\r\n\r\n\t\tconst { messages, selectValue, guestSelected, getGreeting } = this.props\r\n\t\tlet firstName;\r\n\t\tlet roomNumber;\r\n\t\tif (guestSelected === undefined || guestSelected.firstName === undefined){\r\n\t\t\tfirstName = selectValue;\r\n\t\t\troomNumber = selectValue;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tfirstName = guestSelected.firstName;\r\n\t\t\troomNumber = guestSelected.reservation.roomNumber;\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t\r\n\t\t\t<Card.Body>\r\n\t\t    <Card.Title>\r\n\t\t    {selectValue[2]}\r\n\t\t    </Card.Title>\r\n\t\t    {getGreeting()}{firstName}{messages[3].beginning}{selectValue === \"Select a guest ID\" ? 'Choost a guest ID' : roomNumber} {selectValue[3]}{messages[3].closing}\r\n\t\t    </Card.Body>\r\n\t\t);\r\n}\r\n}\r\nexport default ReadyMessage;","import React, { Component } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n//Renders default message card\r\n\r\nclass DefaultMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    }\r\n    \r\n\trender(){\t\r\n\t\t\r\n\t\t//Logic for which object to use based on if user chose from dropdown\r\n\r\n\t\tconst { selectValue, guestSelected } = this.props\r\n\t\tlet firstName;\r\n\t\tif (guestSelected === undefined || guestSelected.firstName === undefined){\r\n\t\t\tfirstName = selectValue[1];\r\n\t\t} else {\r\n\t\t\tfirstName = guestSelected.firstName;\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<Card.Body>\r\n\t\t    <Card.Title style={{ color: 'IndianRed' }}>\r\n\t\t    {selectValue[2]}\r\n\t\t    </Card.Title>\r\n\t\t    {firstName} | {selectValue[0]} | {selectValue[2]}\r\n\t\t    </Card.Body>\r\n\t\t);\r\n}\r\n}\r\nexport default DefaultMessage;","import React, { Component } from 'react';\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n//Renders custom message card\r\n\r\nclass CustomMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      guestSelected:[],\r\n      selectGuest: [],\r\n      customizeMessage: [],\r\n      defaultMessage: \"Your message will construct here when you choose buttons.\",\r\n      customMessage: [],\r\n      customizeTitle: \"\",\r\n      messageTitle: \"Custom Title\",\r\n      company: []\r\n      };\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleTitle = this.handleTitle.bind(this);\r\n      this.changeTitle = this.changeTitle.bind(this);\r\n      this.handleMessage = this.handleMessage.bind(this);\r\n      this.handleClear = this.handleClear.bind(this);\r\n      this.handleFirstName = this.handleFirstName.bind(this);\r\n      this.handleRoomNumber = this.handleRoomNumber.bind(this);\r\n      this.handleCompanyName = this.handleCompanyName.bind(this);\r\n      this.handleCity = this.handleCity.bind(this);\r\n    }\r\n    \r\n    //All button object handlers\r\n    handleChange(e){\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n\r\n    //Change title \r\n    changeTitle(e){\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n\r\n    //Set title \r\n    handleTitle(e){\r\n      e.preventDefault();\r\n      this.setState({\r\n      messageTitle: [this.state.customizeTitle]\r\n    });\r\n      this.setState({customizeTitle: \"\"});\r\n    }\r\n\r\n    //Set message\r\n    handleMessage(e){\r\n      e.preventDefault();\r\n      this.setState({\r\n      customMessage: [...this.state.customMessage, this.state.customizeMessage, \" \"]\r\n    })\r\n      this.setState({customizeMessage: \"\"});\r\n    }\r\n\r\n    //Clear\r\n    handleClear(){\r\n      this.setState({customMessage: \"\"});\r\n    }\r\n\r\n    //Insert first name\r\n    handleFirstName(){\r\n    const { selectValue, guestSelected } = this.props;\r\n    let firstName;\r\n    if (guestSelected === undefined || guestSelected.firstName === undefined){\r\n      firstName = selectValue[1];\r\n    } else {\r\n      firstName = guestSelected.firstName;\r\n    }\r\n      this.setState({customMessage: [...this.state.customMessage, firstName, \" \"]});\r\n    }\r\n    \r\n    //Insert room number\r\n    handleRoomNumber(){\r\n      const { selectValue, guestSelected } = this.props;\r\n      let roomNumber;\r\n      if (guestSelected === undefined || guestSelected.firstName === undefined){\r\n        roomNumber = selectValue[1];\r\n      } else {\r\n        roomNumber = guestSelected.reservation.roomNumber;\r\n      }\r\n        this.setState({customMessage: [...this.state.customMessage, roomNumber, \" \"]});\r\n      }\r\n    \r\n    //Insert company name\r\n    handleCompanyName(){\r\n      this.setState({ customMessage: [...this.state.customMessage, this.props.selectValue[0], \" \"]});\r\n    }\r\n\r\n    //Insert city\r\n    handleCity(){\r\n      \r\n      const { selectValue, companySelected } = this.props;\r\n      let city;\r\n      if (companySelected === undefined || companySelected.company === undefined){\r\n        city = selectValue[0];\r\n      } else {\r\n        city = companySelected.city;\r\n      }\r\n      this.setState({customMessage: [...this.state.customMessage, city, \" \"]});\r\n    }\r\n\r\n  render() {  \r\n    \r\n    //Logic for which object to use based on if user chose from dropdown\r\n\r\n    let message;\r\n    if (this.state.customMessage[0] === undefined) {\r\n      message = this.state.defaultMessage;\r\n    } else {\r\n      message = this.state.customMessage;\r\n    }     \r\n    return (\r\n         <div> \r\n          <Form className='customMessage' >\r\n          <Form.Label\r\n            className=\"card-title\" \r\n            htmlFor='messageTitle'>\r\n          <input\r\n            as=\"textarea\"\r\n            placeholder='Enter custom title...'\r\n            id='customizeTitle' \r\n            name='customizeTitle'\r\n            value={this.state.custimizeTitle}\r\n            onChange={this.changeTitle}\r\n          />\r\n          <button value=\"Click Me\" onClick={this.handleTitle}>Insert Title</button>\r\n          <h5>{this.state.messageTitle}</h5>\r\n          </Form.Label>\r\n          <p>{message}</p>\r\n          <Form.Control \r\n            as=\"textarea\" \r\n            rows=\"3\"\r\n            placeholder='Enter your custom message here...'\r\n            id='customizeMessage' \r\n            name=\"customizeMessage\" \r\n            value={this.state.customizeMessage}\r\n            onChange={this.handleChange}\r\n            />\r\n          </Form>\r\n          <button value=\"Insert Text\" onClick={this.handleMessage}>Insert Text</button>\r\n          <button value=\"Guest Name\" onClick={this.handleFirstName}>Guest Name</button>\r\n          <button value=\"Company Name\" onClick={this.handleCompanyName}>Company Name</button>\r\n          <button value=\"City\" onClick={this.handleCity}>City</button>\r\n          <button value=\"Room Number\" onClick={this.handleRoomNumber}>Room Number</button>\r\n          <button value=\"Clear\" className='clearButton'onClick={this.handleClear}>Clear</button>\r\n          \r\n        </div>\r\n      );  \r\n  }     \r\n}\r\n\r\nexport default CustomMessage;\r\n","import React, { Component } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\nimport WelcomeMessage from './WelcomeMessage';\r\nimport CleanedMessage from './CleanedMessage';\r\nimport ServiceMessage from './ServiceMessage';\r\nimport ReadyMessage from './ReadyMessage';\r\nimport DefaultMessage from './DefaultMessage';\r\nimport CustomMessage from './CustomMessage';\r\n\r\nclass MessageCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }  \r\n\r\n  render() {  \r\n\r\n    //Logic for which message card to display based on user selection\r\n    const { selectValue, messages, getGreeting, companySelected, guestSelected, guestData, time } = this.props\r\n\r\n    if (!messages[0]) return null;\r\n    if (!guestData) return null;\r\n\r\n    if (selectValue[2] === messages[0].title){\r\n      return (\r\n        <Card>\r\n          <WelcomeMessage getGreeting={getGreeting} companySelected={companySelected} guestSelected={guestSelected} guestData={guestData} selectValue={selectValue} messages={messages} />\r\n        </Card>\r\n      );\r\n    } else if (selectValue[2] === messages[1].title){\r\n        return (\r\n          <Card>\r\n            <CleanedMessage getGreeting={getGreeting} guestSelected={guestSelected} guestData={guestData} selectValue={selectValue} time={time} messages={messages} />\r\n          </Card>\r\n        );\r\n    } else if (selectValue[2] === messages[2].title){\r\n        return (  \r\n          <Card>\r\n            <ServiceMessage getGreeting={getGreeting} companySelected={companySelected} guestSelected={guestSelected} guestData={guestData} selectValue={selectValue} messages={messages} />\r\n          </Card>\r\n        );\r\n    } else if (selectValue[2] === messages[3].title){\r\n        return (       \r\n          <Card>\r\n            <ReadyMessage getGreeting={getGreeting} guestSelected={guestSelected} guestData={guestData} selectValue={selectValue} messages={messages}/>\r\n          </Card>\r\n        );\r\n    } else if (selectValue[2] === messages[4].title){\r\n      return (       \r\n          <CustomMessage companySelected={companySelected} guestSelected={guestSelected} guestData={guestData} selectValue={selectValue} />\r\n        );    \r\n      } else {\r\n          return (\r\n          <Card>\r\n          <DefaultMessage companySelected={companySelected} guestSelected={guestSelected} guestData={guestData} selectValue={selectValue}/>\r\n          </Card>\r\n          );  \r\n    }     \r\n  }\r\n  \r\n}\r\nexport default MessageCard;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport logo from './logo.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MessageSelect from './Selectors/MessageSelect';\r\nimport CompanySelect from './Selectors/CompanySelect';\r\nimport GuestSelect from './Selectors/GuestSelect';\r\nimport MessageCard from './Messages/MessageCard';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props); \r\n        this.state = {\r\n          messages: [],\r\n          companyData: [],\r\n          guestData: [],\r\n          time: null,\r\n          hour: null,\r\n          minutes: null,\r\n          greeting:[],\r\n          selectValue: [\"Select a company\", \"Select a guest ID\", \"Select a Message Type\"],\r\n          guestSelected: [],\r\n          companySelected: []\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getHour = this.getHour.bind(this);\r\n    this.getGreeting = this.getGreeting.bind(this);\r\n\r\n  }\r\n  \r\n  //Add zero like regular clock\r\n  addZero(i) {\r\n    if (i < 10){\r\n      i = \"0\" + i;\r\n    }\r\n    return i;\r\n   }\r\n  //Change to 12 hour clock\r\n  /*twelveHour(i) {\r\n    if (i > 12) {\r\n      i = i - 12;\r\n    }\r\n    return i;\r\n   }*/\r\n  getHour() {\r\n    const date = new Date();\r\n    const hour = this.addZero(date.getHours());\r\n    const minutes = this.addZero(date.getMinutes());\r\n    const time = hour + \":\" + minutes;\r\n\r\n    this.setState({time});\r\n    this.setState({minutes});\r\n    this.setState({hour});\r\n    }\r\n\r\n\r\n\r\n  //Get greeting based on time of day.\r\n  getGreeting() {\r\n    let greeting;\r\n    if (this.state.hour >=12 && this.state.hour <= 17){\r\n      greeting = 'Good afternoon, ';\r\n    } else if (this.state.hour >=17){\r\n      greeting = 'Good evening, ';\r\n    } else {\r\n      greeting = 'Good morning, ';\r\n    }\r\n    return greeting\r\n  }\r\n\r\n  //Splices selectValue state based on selection.\r\n  handleChange (e, index) {\r\n    const options = e.target.options;\r\n    const selectValue = [...this.state.selectValue];\r\n      for (var i = 0, l = options.length; i < l; i++) {  \r\n        if (options[i].selected && selectValue.indexOf(options[i].value) === -1){\r\n          selectValue.splice(index, 1, options[i].value);\r\n        }\r\n      }\r\n    this.setState({selectValue}, this.handleGuestState);  \r\n    this.setState({selectValue}, this.handleCompanyState);  \r\n };   \r\n\r\n  //Create single guest object to pass down.\r\n  handleGuestState = () => {\r\n    if (!this.state.guestData) return null;\r\n    const selectedGuestID = parseInt (this.state.selectValue[1]);\r\n    const guestSelected = this.state.guestData.find(item=> item.id === selectedGuestID);\r\n    this.setState({\r\n      guestSelected: guestSelected\r\n    });\r\n  }\r\n\r\n  //Create single company object to pass down.\r\n  handleCompanyState = () => {\r\n    const selectedCompany = (this.state.selectValue[0]);\r\n    const companySelected = this.state.companyData.find(item=> item.company === selectedCompany);\r\n    this.setState({\r\n      companySelected: companySelected\r\n    });\r\n  }\r\n\r\n  //calling current greeting and hour\r\n  componentDidMount() { \r\n        //Get current Message Data\r\n    \r\n        axios.get('/Message.json')\r\n        .then((response) => {\r\n             this.setState({\r\n              messages: response.data\r\n           })\r\n         })\r\n            \r\n        .catch((error) =>console.log(error));\r\n        \r\n        //Get current Guest Data \r\n        \r\n        axios.get('/Guests.json')\r\n        .then((response) => {\r\n             this.setState({\r\n              guestData: response.data\r\n           })\r\n         })\r\n            \r\n        .catch((error) =>console.log(error));\r\n        \r\n        //Get current Company Data\r\n    \r\n        axios.get('/Companies.json')\r\n        .then((response) => {\r\n             this.setState({\r\n              companyData: response.data\r\n           })\r\n         })\r\n            \r\n        .catch((error) =>console.log(error));\r\n        \r\n    \r\n    \r\n    \r\n    this.getHour();\r\n    this.getGreeting();\r\n    \r\n  }\r\n\r\n  render()  {\r\n    \r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </header>\r\n\r\n        <div className=\"container\" id=\"messageArea\">\r\n          <h2 className=\"title\">Send your client a message!</h2>\r\n\r\n          <div className=\"row center\">\r\n            <div className=\"col-4\">\r\n            <div className=\"form-group\">\r\n            <form onSubmit={this.handleSubmit}>\r\n            <label  className=\"form-label\">Choose Message Type</label>\r\n                <select className=\"form-control\" id=\"formSelect\" onChange={(e) => this.handleChange(e, 2)}>  \r\n                  <option default>Select Message Type</option>\r\n                  <MessageSelect messages={this.state.messages} />\r\n                </select>\r\n            </form>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label className=\"form-label\">Choose Company</label>\r\n              <select className=\"form-control\"  id=\"formSelect\" onChange={(e) => this.handleChange(e, 0)}>\r\n                <option default>Select a Company</option>\r\n                <CompanySelect companyData={this.state.companyData} />\r\n              </select>  \r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label className=\"form-label\">Choose Guest ID</label>\r\n                <select className=\"form-control\"  id=\"formSelect\" onChange={(e) => this.handleChange(e, 1)}> \r\n                  <option default>Select a guest ID</option>\r\n                  <GuestSelect guestData={this.state.guestData} />\r\n                </select>\r\n            </div>\r\n            </div>\r\n                <div className=\"col-8\" id=\"message\">\r\n                <label className=\"form-label\">Message will display below</label>\r\n                <MessageCard getGreeting={this.getGreeting} time={this.state.time} companySelected={this.state.companySelected} guestSelected={this.state.guestSelected} guestData={this.state.guestData} selectValue={this.state.selectValue} messages={this.state.messages} messageType={this.state.messageType} value={this.state.value} className=\"col-8\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t\t<App />,\n\tdocument.getElementById('root')\n\t);\n\tserviceWorker.unregister();\n"],"sourceRoot":""}